{"version":3,"sources":["logo/index.js","logo/prefs.js","App.js","serviceWorker.js","index.js"],"names":["PATHWIDTH","pathExtendedWidth","Math","sqrt","SVG","children","xmlns","xlinkHref","preserveAspectRatio","version","viewBox","MEDIA","width","height","transform","expandLine","x1","y1","x2","y2","dist","angle","atan2","x","sin","y","cos","calcStickOutLine","p1","p2","shortLine","start","end","smallerLen","xlen","ylen","ratio","pow","smallerXLen","smallerYLen","shortenLine","topPoints","p1r","p1l","bottomPoints","p2r","p2l","p1c","p2c","DrawStick","prefs","color","fill","stroke","strokeWidth","d","getRandom","list","floor","random","length","DrawOutline","drawPaths","outline","points","i","drawPoints","pointIndex","push","map","item","index","join","strokeLinecap","strokeMiterlimit","randomBetween","min","max","CalcStick","minX","maxX","minY","maxY","xOffset","yOffset","One","Three","Two","outlineDraw","OneOutlinePath","TwoOutlinePath","ThreeOutlinePath","OneStickStart","TwoStickStart","ThreeStickStart","OneStickEnd","TwoStickEnd","ThreeStickEnd","getTween","t","easeInOut","blend","f","OneStick","TwoStick","ThreeStick","App","useState","count","setCount","requestRef","React","useRef","previousTimeRef","animate","time","undefined","current","deltaTime","prevCount","newState","requestAnimationFrame","useEffect","cancelAnimationFrame","className","class","rel","href","target","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.72067ca3.chunk.js","sourcesContent":["import React from \"react\";\n\nconst GRID_X = 4;\nconst GRID_Y = 4;\n\nconst pathExtendedWidth = 0.24;\nconst PATHWIDTH = (pathExtendedWidth / 2) * Math.sqrt(2);\n\nconst SIZE = 250;\nconst MEDIA = 200;\n\n// <rect\n//   width={MEDIA}\n//   height={MEDIA}\n//   style={{ fill: \"rgb(255,255,255)\", strokeWidth: 0 }}\n// />\n\nexport const SVG = ({ children }) => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    xlinkHref=\"http://www.w3.org/1999/xlink\"\n    preserveAspectRatio=\"xMinYMin slice\"\n    version=\"1.1\"\n    viewBox={`0 0 ${MEDIA} ${MEDIA * 3}`}\n    width={MEDIA}\n    height={MEDIA * 3}\n  >\n    <g transform={`translate(${(MEDIA - SIZE) / 2},${(MEDIA - SIZE) / 2})`}>\n      {children}\n    </g>\n  </svg>\n);\n\n// http://stackoverflow.com/questions/24376951/find-new-coordinates-of-point-on-line\n// http://jsfiddle.net/3SY8v/\nexport const shortenLine = (start, end, smallerLen) => {\n  // Determine line lengths\n  var xlen = end.x - start.x;\n  var ylen = end.y - start.y;\n\n  // Determine hypotenuse length\n  var hlen = Math.sqrt(Math.pow(xlen, 2) + Math.pow(ylen, 2));\n\n  // Determine the ratio between they shortened value and the full hypotenuse.\n  var ratio = smallerLen / hlen;\n\n  var smallerXLen = xlen * ratio;\n  var smallerYLen = ylen * ratio;\n\n  return {\n    start: {\n      // The new point is the starting plus the smaller length.\n      x: start.x + smallerXLen,\n      y: start.y + smallerYLen\n    },\n    end: {\n      x: end.x - smallerXLen,\n      y: end.y - smallerYLen\n    }\n  };\n};\n\n// http://stackoverflow.com/questions/17989148/javascript-find-point-on-perpendicular-line-always-the-same-distance-away\n// http://jsfiddle.net/92jWG/6/\nexport const expandLine = (x1, y1, x2, y2, dist) => {\n  var angle = Math.atan2(y2 - y1, x2 - x1);\n\n  // Draw a normal to the line above\n  return [\n    {\n      x: Math.sin(angle) * dist + x1,\n      y: -Math.cos(angle) * dist + y1\n    },\n\n    {\n      x: -Math.sin(angle) * dist + x1,\n      y: Math.cos(angle) * dist + y1\n    }\n  ];\n};\n\n/*\n\n         ┌ ─ ─ ┐\n            P1\n         │  ◎  │    ▲\n          ─ ┼ ─     │\n            │       │70\n            │P1C    ▼\nP1R ◎─ ─ ─ ─◎─ ─ ─ ─◎ P1L\n    │       │       │\n    │       │       │\n    │       │       │\n    │       │       │\n    │◀─────▶│◀─────▶│\n    │  70   │  70   │\n    │       │       │\n    │       │       │\n    │       │       │\n    │       │       │\n    │       │       │\nP2R ◎─ ─ ─ ─◎─ ─ ─ ─◎ P2L\n            │P2C\n            │\n            │\n         ┌ ─│─ ┐\n            ◎\n         │  P2 │\n          ─ ─ ─\n\n*/\nexport const calcStickOutLine = (p1, p2) => {\n  let shortLine = shortenLine(p1, p2, pathExtendedWidth / 2);\n\n  var topPoints = expandLine(\n    shortLine.start.x,\n    shortLine.start.y,\n    shortLine.end.x,\n    shortLine.end.y,\n    pathExtendedWidth / 2\n  );\n\n  var p1r = topPoints[1];\n  var p1l = topPoints[0];\n\n  var bottomPoints = expandLine(\n    shortLine.end.x,\n    shortLine.end.y,\n    shortLine.start.x,\n    shortLine.start.y,\n    pathExtendedWidth / 2\n  );\n  var p2r = bottomPoints[0];\n  var p2l = bottomPoints[1];\n\n  return {\n    p1: p1,\n    p2: p2,\n    p1c: shortLine.start,\n    p2c: shortLine.end,\n    p1r: p1r,\n    p1l: p1l,\n    p2r: p2r,\n    p2l: p2l\n  };\n};\n\nexport const DrawGrid = () => {\n  let circles = [];\n\n  for (var x = 0; x < GRID_X; x++) {\n    for (var y = 0; y < GRID_Y; y++) {\n      circles.push(\n        <circle\n          cx={(SIZE / (GRID_X - 1)) * x}\n          cy={(SIZE / (GRID_Y - 1)) * y}\n          r={0.05 * SIZE}\n          stroke=\"none\"\n          fill=\"#555\"\n        />\n      );\n    }\n  }\n\n  return circles;\n};\n\nexport const DrawStick = (prefs, color) => {\n  const { start, end } = prefs;\n  return (\n    <path\n      fill=\"none\"\n      stroke={color}\n      strokeWidth={PATHWIDTH * SIZE}\n      d={`M ${start.x * SIZE},${start.y * SIZE} L ${end.x * SIZE},${end.y *\n        SIZE}`}\n    />\n  );\n};\n\nexport const getRandom = list => {\n  return list[Math.floor(Math.random() * list.length)];\n};\n\nexport const DrawOutline = (prefs, color, drawPaths) => {\n  const outline = calcStickOutLine(prefs.start, prefs.end);\n\n  var points = [];\n\n  for (var i = 0; i < drawPaths.length; i++) {\n    var drawPoints = drawPaths[i];\n\n    for (var pointIndex = 0; pointIndex < drawPoints.length; pointIndex++) {\n      points.push(outline[drawPoints[pointIndex]]);\n    }\n  }\n\n  let d = points\n    .map(\n      (item, index) =>\n        `${index === 0 ? \"M\" : \"L\"} ${item.x * SIZE},${item.y * SIZE}`\n    )\n    .join(\" \");\n\n  return (\n    <path\n      strokeLinecap=\"square\"\n      strokeMiterlimit={10}\n      stroke={color}\n      strokeWidth={(pathExtendedWidth / 2) * SIZE}\n      fill=\"none\"\n      d={d}\n    />\n  );\n};\n\nconst randomBetween = (min, max) => {\n  return Math.floor(Math.random() * (max - min + 1) + min);\n};\n\nexport const CalcStick = prefs => {\n  const { minX, maxX, minY, maxY } = prefs;\n\n  const width = randomBetween(minX, maxX);\n  const height = randomBetween(minY, maxY);\n\n  const xOffset = randomBetween(0, GRID_X - width - 1);\n  const yOffset = randomBetween(0, GRID_Y - height - 1);\n\n  const clockwise = Math.random() >= 0.5;\n\n  if (clockwise) {\n    return {\n      start: {\n        x: (1 / (GRID_X - 1)) * xOffset,\n        y: (1 / (GRID_Y - 1)) * yOffset\n      },\n      end: {\n        x: (1 / (GRID_X - 1)) * (xOffset + width),\n        y: (1 / (GRID_Y - 1)) * (yOffset + height)\n      }\n    };\n  } else {\n    return {\n      start: {\n        x: (1 / (GRID_X - 1)) * (xOffset + width),\n        y: (1 / (GRID_Y - 1)) * yOffset\n      },\n      end: {\n        x: (1 / (GRID_X - 1)) * xOffset,\n        y: (1 / (GRID_Y - 1)) * (yOffset + height)\n      }\n    };\n  }\n};\n","// the green bar can just be tillt no straight\nexport const One = {\n  minX: 1,\n  maxX: 2,\n  minY: 3,\n  maxY: 3,\n  color: \"#558779\" // '#00ff99',\n};\n\nexport const Three = {\n  minX: 0,\n  maxX: 0,\n  minY: 2,\n  maxY: 2,\n  color: \"#899f95\" // '#330099',\n};\n\nexport const Two = {\n  minX: 1,\n  maxX: 1,\n  minY: 1,\n  maxY: 1,\n  color: \"#b1a455\" // '#9966cc',\n};\n\nexport const outlineDraw = [\n  // L-shape A\n  [\n    [\"p1\", \"p1l\", \"p2l\"],\n    [\"p2\", \"p2r\", \"p1r\"]\n  ],\n\n  // L-shape B\n  [\n    [\"p1\", \"p1r\", \"p2r\"],\n    [\"p2\", \"p2l\", \"p1l\"]\n  ],\n\n  // D-shape A\n  [\n    [\"p1\", \"p1l\", \"p2l\", \"p2\"],\n    [\"p2r\", \"p1r\"]\n  ],\n\n  // D-shape B\n  [\n    [\"p1\", \"p1r\", \"p2r\", \"p2\"],\n    [\"p2l\", \"p1l\"]\n  ],\n\n  // O-shape A\n  [[\"p1\", \"p1l\", \"p2l\", \"p2\", \"p2r\", \"p1r\"]],\n\n  // O-shape B\n  [[\"p1l\", \"p2l\", \"p2\", \"p2r\", \"p1r\", \"p1\"]],\n\n  // O-shape C\n  [[\"p2\", \"p2r\", \"p1r\", \"p1\", \"p1l\", \"p2l\"]],\n\n  // O-shape C\n  [[\"p2r\", \"p1r\", \"p1\", \"p1l\", \"p2l\", \"p2\"]]\n];\n","import React, { useState, useEffect } from \"react\";\nimport {\n  SVG,\n  CalcStick,\n  DrawStick,\n  // DrawGrid,\n  DrawOutline,\n  getRandom\n} from \"./logo\";\nimport { One, Two, Three, outlineDraw } from \"./logo/prefs\";\nimport \"./App.css\";\n\nconst OneOutlinePath = getRandom(outlineDraw);\nconst TwoOutlinePath = getRandom(outlineDraw);\nconst ThreeOutlinePath = getRandom(outlineDraw);\n\nlet OneStickStart = CalcStick(One);\nlet TwoStickStart = CalcStick(Two);\nlet ThreeStickStart = CalcStick(Three);\n\nlet OneStickEnd = CalcStick(One);\nlet TwoStickEnd = CalcStick(Two);\nlet ThreeStickEnd = CalcStick(Three);\n\nfunction easeInOut(t) {\n  return t < 0.5 ? 4 * t * t * t : (t - 1) * (2 * t - 2) * (2 * t - 2) + 1;\n}\n\n// start - beginning position\n// e - ending position\n// t - your current value (0–1)\nconst getTween = (start, end, t) => {\n  return start + (easeInOut(t) / 1) * (end - start);\n};\n\nconst blend = (start, end, f) => {\n  return {\n    start: {\n      x: getTween(start.start.x, end.start.x, f),\n      y: getTween(start.start.y, end.start.y, f)\n    },\n    end: {\n      x: getTween(start.end.x, end.end.x, f),\n      y: getTween(start.end.y, end.end.y, f)\n    }\n  };\n};\n\nlet OneStick = blend(OneStickStart, OneStickEnd, 0);\nlet TwoStick = blend(TwoStickStart, TwoStickEnd, 0);\nlet ThreeStick = blend(ThreeStickStart, ThreeStickEnd, 0);\nlet skip = false;\n\nfunction App() {\n  const [count, setCount] = useState(0);\n\n  // Use useRef for mutable variables that we want to persist\n  // without triggering a re-render on their change\n\n  const requestRef = React.useRef();\n  const previousTimeRef = React.useRef();\n\n  const animate = time => {\n    if (previousTimeRef.current !== undefined) {\n      const deltaTime = time - previousTimeRef.current;\n\n      // Pass on a function to the setter of the state\n      // to make sure we always have the latest state\n      setCount(prevCount => {\n        const newState = (prevCount + (deltaTime * 1) / 50) % 50;\n\n        if (newState < prevCount) {\n          // if (skip) {\n          //   skip = !skip; // no idea why it gets two times called\n          // } else {\n          //   skip = !skip; // no idea why it gets two times called\n          OneStickStart = OneStickEnd;\n          OneStickEnd = CalcStick(One);\n          TwoStickStart = TwoStickEnd;\n          TwoStickEnd = CalcStick(Two);\n          ThreeStickStart = ThreeStickEnd;\n          ThreeStickEnd = CalcStick(Three);\n          // }\n        }\n\n        return newState;\n      });\n    }\n    previousTimeRef.current = time;\n    requestRef.current = requestAnimationFrame(animate);\n  };\n\n  useEffect(() => {\n    requestRef.current = requestAnimationFrame(animate);\n    return () => cancelAnimationFrame(requestRef.current);\n  }, [animate]); // Make sure the effect runs only once\n\n  OneStick = blend(OneStickStart, OneStickEnd, (1 / 50) * count);\n  TwoStick = blend(TwoStickStart, TwoStickEnd, (1 / 50) * count);\n  ThreeStick = blend(ThreeStickStart, ThreeStickEnd, (1 / 50) * count);\n\n  return (\n    <div className=\"App\">\n      <div className=\"App-bg\">\n        <SVG>\n          {/* DrawGrid() */}\n          {DrawStick(OneStick, One.color)}\n          {DrawStick(TwoStick, Two.color)}\n          {DrawStick(ThreeStick, Three.color)}\n        </SVG>\n      </div>\n      <div className=\"App-title\">\n        <div className=\"App-title--inner\">\n          <h1>\n            D&#x200b;i&#x200b;p&#x200b;l&#x200b;o&#x200b;m&#x200b;a&#x200b;u&#x200b;s&#x200b;s&#x200b;t&#x200b;e&#x200b;l&#x200b;l&#x200b;u&#x200b;n&#x200b;g\n          </h1>\n        </div>\n      </div>\n\n      <div className=\"App-bg\">\n        <SVG>\n          {/* DrawGrid() */}\n          {DrawOutline(OneStick, One.color, OneOutlinePath)}\n          {DrawOutline(TwoStick, Two.color, TwoOutlinePath)}\n          {DrawOutline(ThreeStick, Three.color, ThreeOutlinePath)}\n        </SVG>\n      </div>\n\n      <div className=\"App-text\">\n        <div className=\"App-text--inner\">\n          <h3>Diplomausstellung</h3>\n          <p>\n            HF Interaction Design\n            <br />\n            Schule&nbsp;für Gestaltung Zürich{\" \"}\n            <a\n              class=\"\"\n              rel=\"noopener noreferrer\"\n              href=\"https://sfgz.ch\"\n              target=\"_blank\"\n            >\n              ↗\n            </a>\n          </p>\n          <h3>11. 7. 2020 · 13.30 – 16­&nbsp;Uhr</h3>\n          <p>Eröffnung &amp; Apéro</p>\n          <h3>Ort</h3>\n          <p>\n            SiloSilo Halle <br />\n            Limmatstrasse&nbsp;254\n            <br />\n            8005&nbsp;Zürich{\" \"}\n            <a\n              class=\"\"\n              rel=\"noopener noreferrer\"\n              href=\"https://goo.gl/maps/mPSGSN56B21iZGTJ6\"\n              target=\"_blank\"\n            >\n              ↗\n            </a>\n          </p>\n\n          <a\n            rel=\"noopener noreferrer\"\n            href=\"https://forms.gle/U5eY7ohNSczT8S2D7\"\n            target=\"_blank\"\n            class=\"a--underline\"\n          >\n            Bitte Anmelden\n          </a>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}